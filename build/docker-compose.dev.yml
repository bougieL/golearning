version: "3"

services:
  golang:
    hostname: golearning_golang
    container_name: golearning_golang
    image: golang:golearning
    ports:
      - 8001:8080
    depends_on:
      - mysql
    volumes:
      - ../:/go/src/golearning/
      - /var/run/docker.sock:/var/run/docker.sock
    working_dir: /go/src/golearning/
    # command: sh -c 'go mod vendor && go mod tidy && gin -p 8080 run ./main.go'
    command: gin -p 8080 run ./main.go
    build:
      context: ../dockerfile
      dockerfile: golang.dockerfile
    environment:
      - MYSQL_HOSTNAME=golearning_mysql
      - MYSQL_DATABASE=golearning
      - MYSQL_USERNAME=root
      - MYSQL_PASSWORD=root
      - MYSQL_PORT=3306
      - ACCESS_TOKEN=golearning
    networks:
      - golearning_net
  mysql:
    hostname: golearning_mysql
    container_name: golearning_mysql
    image: mysql:5.5
    ports:
      - 3307:3306
    volumes:
      - ../docs/mysql/:/docker-entrypoint-initdb.d/
      - ../docs/mysqldump/:/mysqldump/
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=golearning
    networks:
      - golearning_net
  swagger-ui:
    container_name: golearning_swagger-ui
    image: swaggerapi/swagger-ui
    ports:
      - 8002:8080
    volumes:
      - ../docs/swagger/:/app/
    networks:
      - golearning_net
    environment: 
      - SWAGGER_JSON=/app/golearning.yml

networks:
  golearning_net: